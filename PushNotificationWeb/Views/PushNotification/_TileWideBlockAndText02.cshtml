@model NotificationsExtensions.TileContent.ITileWideBlockAndText02

@{
    var viewData = (PushNotification.WebSites.Web.ViewModel.NotificationTemplateViewModel)ViewBag.ViewData;
}
@using (Ajax.BeginForm(
        "SendNotification",
        new AjaxOptions
        {
            OnSuccess = string.Format("UpdateNotificationStatus(data, status, xhr, '{0}_{1}')", viewData.ApplicationId, viewData.DeviceId),
            LoadingElementDuration = 1200,
            LoadingElementId = string.Format("sending_{0}_{1}", viewData.ApplicationId, viewData.DeviceId),
            HttpMethod = "POST"
        }))
{
    @Html.Hidden("ChannelUrl", (string)viewData.ChannelUrl)
    @Html.Hidden("NotificationType", (string)viewData.NotificationType)
    @Html.Hidden("NotificationTemplateType", (string)viewData.NotificationTemplateType)

    <fieldset>
        <p>One string of regular text wrapped over a maximum of four lines on the left; large block text over a 
        single, short string of bold, regular text on the right.</p>

        <div class="editor-label">
            <label>Left regular text</label>
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(m => m.TextBodyWrap.Text)
        </div>

        <div class="editor-label">
            <label>Large text</label>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.TextBlock.Text)
        </div>

        <div class="editor-label">
            <label>Short bold text</label>
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(m => m.TextSubBlock.Text)
        </div>

        <div class="editor-label">
            <label>Square Tile text</label>
        </div>
        <div class="editor-field">
            @Html.TextBox("AlternativeTileText")
        </div>
    </fieldset>
}